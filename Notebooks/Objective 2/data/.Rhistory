sum_norm_bin_coverage <- function(e) {
total_cov <- sum(e$coverage)
select(e, .data$coverage) %>% transmute(
cov.norm.bin = if_else(coverage==0, 0, coverage/total_cov)
)
}
# Take f.bin and add a corresponding col to each col with the name of the source sample
append_sample_name_to_bin_cov <- function(name) {
cov <- select(f.bin, !!name)
size <- dim(cov)[1]
names <- replicate(size, name)
positions <- 1:size
setNames(data.frame(positions, cov, names),
c("Positions","Coverage", "Sample"))
}
# Take f.bin and add a corresponding col to each col with the name of the source sample
append_sample_name_to_bin_cov <- function(name) {
cov <- select(f.bin, !!name)
size <- dim(cov)[1]
names <- replicate(size, name)
positions <- 1:size
setNames(data.frame(positions, cov, names),
c("Positions","Coverage", "Sample"))
}
append_sample_name_to_named_cov <-  function(name) {
cov <- x[[name]]
size <- dim(cov)[1]
names <- replicate(size, name)
positions <- 1:size
setNames(data.frame(positions, cov, names),
c("Positions","Coverage", "Sample"))
}
# Script ----
## Fetch data ----
setwd("~/src/Masters/Project/Notes/Notebooks/Objective 1/data")
# Get the list of each coverage table
file_list <- list.files(pattern="*.pack.table")
# Extract each sample name
sample_names <- lapply(file_list, extract_sample_name)
# read all the CSV files into a list
all_columns <- lapply(file_list, read.delim)
# Extract the coverage column for each sample
covs <- lapply(all_columns, extract_coverage)
View(x.named)
View(x)
## PCA ----
### SARS-CoV-2
xt.df <- prcomp(t(data.frame(x)))
View(xt.df)
View(xt.df)
data <- as.data.frame(x.df.pca$x)
data <- as.data.frame(xt.df.pca$x)
## PCA ----
### SARS-CoV-2
xt.df.pca <- prcomp(t(data.frame(x)))
data <- as.data.frame(xt.df.pca$x)
View(data)
View(data)
data <- setNames(as.data.frame(xt.df.pca$x), sample_names)
View(data)
View(data)
ggplot(data = data, aes(x=PC1, y=PC2, colour=Samples)) +
geom_point() +
scale_fill_distiller(palette = "YlGnBu") +
labs(title = "SARS-CoV-2 simulated reads PC1 vs PC2 ")
xt.df.pca <- prcomp(t(setNames(data.frame(x), sample_names)))
data <- as.data.frame(xt.df.pca$x)
View(data)
View(data)
ggplot(data = data, aes(x=PC1, y=PC2, colour=Samples)) +
geom_point() +
scale_fill_distiller(palette = "YlGnBu") +
labs(title = "SARS-CoV-2 simulated reads PC1 vs PC2 ")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/SARS_CoV_2_PCA.pdf",
height=6,
width=8,
dpi=400)
dev.off()
## Visualize ---
ggplot(bound_samples, aes(`Positions`, `Sample`, fill=`Coverage`)) +
geom_tile() +
scale_fill_gradient(low="black", high="white") +
labs(title = "SARS-COV-2 simulated reads Coverage vs Position per sample",
x = "Position",
y = "Sample")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/SARS_PCA.pdf",
height=6,
width=8,
dpi=400)
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/SARS_PCA.png",
height=6,
width=8,
dpi=400)
## Visualize ---
ggplot(bound_samples, aes(`Positions`, `Sample`, fill=`Coverage`)) +
geom_tile() +
scale_fill_gradient(low="black", high="white") +
labs(title = "SARS-COV-2 simulated reads Coverage vs Position per sample",
x = "Position",
y = "Sample")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/SARS_CoV_2_Heatmap.pdf",
height=6,
width=8,
dpi=400)
dev.off()
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/h_SARS_CoV_2_Heatmap.pdf",
height=6,
width=8,
dpi=400)
dev.off()
## Visualize ---
ggplot(bound_samples, aes(`Positions`, `Sample`, fill=`Coverage`)) +
geom_tile() +
scale_fill_gradient(low="black", high="white") +
labs(title = "SARS-COV-2 simulated reads Coverage vs Position per sample",
x = "Position",
y = "Sample")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/SARS_Heatmap.pdf",
height=6,
width=8,
dpi=400)
dev.off()
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/SARS_Heatmap.pdf",
height=6,
width=8,
dpi=400)
## Visualize ---
ggplot(bound_samples, aes(`Positions`, `Sample`, fill=`Coverage`)) +
geom_tile() +
scale_fill_gradient(low="black", high="white") +
labs(title = "SARS-COV-2 simulated reads Coverage vs Position per sample",
x = "Position",
y = "Sample")
dev.off()
## Visualize ---
ggplot(bound_samples, aes(`Positions`, `Sample`, fill=`Coverage`)) +
geom_tile() +
scale_fill_gradient(low="black", high="white") +
labs(title = "SARS-COV-2 simulated reads Coverage vs Position per sample",
x = "Position",
y = "Sample")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/SARS_Heatmap.png",
height=6,
width=8,
dpi=400)
dev.off()
setwd("~/src/Masters/Project/Notes/Notebooks/Objective 2/data")
# Get the list of each coverage table
file_list <- list.files(pattern="*.pack.table")
# Extract each sample name
sample_names <- lapply(file_list, extract_sample_name)
# read all the CSV files into a list
all_columns <- lapply(file_list, read.delim)
# Extract the coverage column for each sample
covs <- lapply(all_columns, extract_coverage)
View(covs)
View(covs)
lapply(covs, median)
lapply(covs, function(x) {median(X)})
lapply(covs, function(x) {median(x)})
fir <- covs[[1]]
View(fir)
View(fir)
?median
lapply(covs, function(x) {median(as.vector(x))})
firr <- as.vector(fir)
View(firr)
View(firr)
covs.df <- data.frame(covs)
View(covs.df)
View(covs)
covs.df <- t(setNames(data.frame(covs), sample_names))
View(covs.df)
View(covs.df)
View(covs.df)
View(firr)
View(firr)
apply(firr, 2, median)
apply(firr, 2, mean)
apply(firr[1:10], 2, mean)
firr[1,10]
firr[10,]
firr[1:10,]
apply(firr[1:10,], 2, mean)
firr[1:10,]
vec <- firr[1:10,]
firr[,]
median(firr[,])
lapply(covs, function(x) {median(x[,]})
lapply(covs, function(x) {median(x[,])})
medians <- lapply(covs, function(x) {median(x[,])})
medians <- as.vector(lapply(covs, function(x) {median(x[,])}))
medians <- as.vector(unlist(lapply(covs, function(x) {median(x[,])})))
medians
medians <- as.vector(unlist(lapply(covs, function(x) {mean(x[,])})))
medians <- as.vector(unlist(lapply(covs, function(x) {median(x[,])})))
medians
means <- as.vector(unlist(lapply(covs, function(x) {mean(x[,])})))
means
length(means)
length(medians)
maxs <- as.vector(unlist(lapply(covs, function(x) {max(x[,])})))
maxs
covs.structure <- data.frame(
median <- medians,
mean <- means,
max <- maxs
)
View(covs.structure)
View(covs.structure)
?row.names.data.frame
row.names(covs.structure) <- sample_names
View(covs.structure)
View(covs.structure)
covs.structure <- data.frame(medians, means, maxs)
col.names(covs.structure) <- c("Median", "Mean", "Max")
row.names(covs.structure) <- sample_names
?colnames
colnames(covs.structure) <- c("Median", "Mean", "Max")
View(covs.structure)
View(covs.structure)
covs.structure <- data.frame(medians, means, maxs, sample_names)
colnames(covs.structure) <- c("Median", "Mean", "Max", "Samples")
### Visualize the structure of the data
ggplot(data=covs.structure) +
geom_histogram(aes(x=medians, y=Samples))
covs.structure <- data.frame(medians, means, maxs, sample_names)
colnames(covs.structure) <- c("Median", "Mean", "Max", "Samples")
row.names(covs.structure) <- sample_names
### Visualize the structure of the data
ggplot(data=covs.structure) +
geom_histogram(aes(x=medians, y=Samples))
### Visualize the structure of the data
ggplot(data=covs.structure, aes(x=medians, y=Samples)) +
geom_col()
View(covs.structure)
covs.structure <- data.frame(medians, means, maxs)
colnames(covs.structure) <- c("Median", "Mean", "Max")
row.names(covs.structure) <- sample_names
View(covs.structure)
s <- c(unlist(sample_names))
covs.structure <- data.frame(medians, means, maxs, c(unlist(sample_names)))
colnames(covs.structure) <- c("Median", "Mean", "Max", "Samples")
row.names(covs.structure) <- sample_names
### Visualize the structure of the data
ggplot(data=covs.structure, aes(x=medians, y=Samples)) +
geom_col()
### Visualize the structure of the data
ggplot(data=covs.structure, aes(x=Samples, y=medians)) +
geom_col()
### Visualize the structure of the data
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=medians))
### Visualize the structure of the data
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=medians)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
### Visualize the structure of the data
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=medians)) +
theme(axis.text.x = element_text(angle = 90))
### Visualize the structure of the data
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=medians)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Strcutre of the dataset",
x = "Sample",
y = "Median Sample Coverage")
### Visualize the structure of the data
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=medians)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Strcutre of the dataset",
x = "Sample",
y = "Median Sample Coverage") +
geom_col(aes(x=Samples, y=means))
### Visualize the structure of the data
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=medians)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Structure of the dataset",
x = "Sample",
y = "Median Sample Coverage") +
geom_col(aes(x=Samples, y=means))
### Visualize the structure of the data
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=medians)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Meadian Coverage per sample of the dataset",
x = "Sample",
y = "Median Sample Coverage")
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=means)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Mean Coverage per sample of the dataset",
x = "Sample",
y = "Median Sample Coverage")
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=means)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Max Coverage per sample of the dataset",
x = "Sample",
y = "Median Sample Coverage")
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=maxs)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Max Coverage per sample of the dataset",
x = "Sample",
y = "Median Sample Coverage")
### Visualize the structure of the data
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=medians)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Meadian Coverage per sample of the dataset",
x = "Sample",
y = "Median Sample Coverage")
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=means)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Mean Coverage per sample of the dataset",
x = "Sample",
y = "Median Sample Coverage")
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=maxs)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Max Coverage per sample of the dataset",
x = "Sample",
y = "Median Sample Coverage")
?variance
??variance
variance <- as.vector(unlist(lapply(covs, function(x) {var(x[,])})))
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=variance)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Variance of Coverage per sample of the dataset",
x = "Sample",
y = "Varaince of Sample Coverage")
??"standard deviation"
variance <- as.vector(unlist(lapply(covs, function(x) {sd(x[,])})))
sd <- as.vector(unlist(lapply(covs, function(x) {sd(x[,])})))
covs.structure <- data.frame(medians, means, maxs, sd, c(unlist(sample_names)))
colnames(covs.structure) <- c("Median", "Mean", "Max", "Std Dev",  "Samples")
row.names(covs.structure) <- sample_names
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=variance)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Standard Deviation of Coverage per sample of the dataset",
x = "Sample",
y = "Datandard Deviation of Sample Coverage")
mean(means)
median(medians)
median(means)
### Visualize the structure of the data
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=medians)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Meadian Coverage per sample of the dataset",
x = "Sample",
y = "Median Sample Coverage")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/Median_Coverage_HH20.png",
height=6,
width=8,
dpi=400)
dev.off()
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=variance)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Standard Deviation of Coverage per sample of the dataset",
x = "Sample",
y = "Datandard Deviation of Sample Coverage")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/Std_Coverage_HH20.png",
height=6,
width=8,
dpi=400)
dev.off()
Rggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=means)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Mean Coverage per sample of the dataset",
x = "Sample",
y = "Median Sample Coverage")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/RSV/Mean_Coverage_HH20.png",
height=6,
width=8,
dpi=400)
dev.off()
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=means)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Mean Coverage per sample of the dataset",
x = "Sample",
y = "Median Sample Coverage")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/RSV/Mean_Coverage_HH20.png",
height=6,
width=8,
dpi=400)
dev.off()
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=maxs)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Max Coverage per sample of the dataset",
x = "Sample",
y = "Median Sample Coverage")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/RSV/Max_Coverage_HH20.png",
height=6,
width=8,
dpi=400)
dev.off()
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=means)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Mean Coverage per sample of the dataset",
x = "Sample",
y = "Mean Sample Coverage")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/RSV/Mean_Coverage_HH20.png",
height=6,
width=8,
dpi=400)
dev.off()
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=maxs)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Max Coverage per sample of the dataset",
x = "Sample",
y = "Maximum coverage value in the sample")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/RSV/Max_Coverage_HH20.png",
height=6,
width=8,
dpi=400)
dev.off()
ggplot(data=covs.structure) +
geom_col(aes(x=Samples, y=variance)) +
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Standard Deviation of Coverage per sample of the dataset",
x = "Sample",
y = "Standard Deviation of Sample Coverage")
ggsave("~/src/Masters/Project/Notes/Images/Objective 2/RSV/Std_Coverage_HH20.png",
height=6,
width=8,
dpi=400)
dev.off()
library("tidyverse")
library("ggplot2")
library(ape)
library(phyclust)
# Utils ----
extract_sample_name <- function(filename) {
j <- strsplit(filename, "[.]")
unlist(j)[[1]]
}
# Extract coverage from the list element and store it in a dataframe
extract_coverage <- function(d) {
setNames(data.frame(d$coverage),c("coverage"))
}
# Binarize coverage
binarize_coverage <- function(e) {
cov.bin <- select(e, .data$coverage) %>% transmute(cov.bin = if_else(coverage==0, 0, 1))
cov.bin
}
sum_norm_coverage <- function(e) {
total_cov <- sum(e$coverage)
select(e, .data$coverage) %>% transmute(cov.norm = coverage/total_cov)
}
sum_norm_bin_coverage <- function(e) {
total_cov <- sum(e$coverage)
select(e, .data$coverage) %>% transmute(
cov.norm.bin = if_else(coverage==0, 0, coverage/total_cov)
)
}
# Take f.bin and add a corresponding col to each col with the name of the source sample
append_sample_name_to_bin_cov <- function(name) {
cov <- select(f.bin, !!name)
size <- dim(cov)[1]
names <- replicate(size, name)
positions <- 1:size
setNames(data.frame(positions, cov, names),
c("Positions","Coverage", "Sample"))
}
# Take f.bin and add a corresponding col to each col with the name of the source sample
append_sample_name_to_bin_cov <- function(name) {
cov <- select(f.bin, !!name)
size <- dim(cov)[1]
names <- replicate(size, name)
positions <- 1:size
setNames(data.frame(positions, cov, names),
c("Positions","Coverage", "Sample"))
}
append_sample_name_to_named_cov <-  function(name) {
cov <- x[[name]]
size <- dim(cov)[1]
names <- replicate(size, name)
positions <- 1:size
setNames(data.frame(positions, cov, names),
c("Positions","Coverage", "Sample"))
}
# Script ----
setwd("~/src/Masters/Project/Notes/Notebooks/Objective 2/data")
# Get the list of each coverage table
file_list <- list.files(pattern="*.pack.table")
# Extract each sample name
sample_names <- lapply(file_list, extract_sample_name)
# read all the CSV files into a list
all_columns <- lapply(file_list, read.delim)
# Extract the coverage column for each sample
covs <- lapply(all_columns, extract_coverage)
f.bin <- setNames(data.frame(lapply(covs, binarize_coverage)), sample_names)
ft.bin <- t(f.bin)
ft.bin.pca <- prcomp(ft.bin)
ft.bin.pca.df <- as.data.frame(ft.bin.pca$x)
d <- dist(ft.bin.pca.df)
tree <- nj(d)
write.tree(tree, file="~/Desktop/my-tree.nwk", tree.names = TRUE)
